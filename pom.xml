<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.modern.java</groupId>
    <artifactId>modernJava</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.0.0.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>2.0.0.RELEASE</version>
        </dependency>

        <!--<dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>-->

    </dependencies>

    <!--

    빌드 옵션을 추가했다.
    메이븐 설치 후
    mvn install 을 입력하면 필요한 의존성을 모두 내려받고
    자동으로 빌드하는데,
    이 때 install 의 역할은 필요한 파일을 내려받고
    메이븐 프로세스를 실행해주는 역할을 한다.
    이 빌드된 파일을 실행하도록 한다.
     https://www.egovframe.go.kr/wiki/doku.php?id=egovframework:dev:dep:build:maven 참고
     -->
    <build>


        <!--
        <finalName>messages</finalName>&lt;!&ndash;messages-jar-with-dependencies.jar 이라는 파일 생성&ndash;&gt;
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>&lt;!&ndash; 메이븐 플러그인 사용 &ndash;&gt;
                <artifactId>maven-assembly-plugin</artifactId>&lt;!&ndash; 식별자 &ndash;&gt;
                <executions>&lt;!&ndash; 실행옵션 &ndash;&gt;
                    <execution>
                        <phase>package</phase>&lt;!&ndash; package 단계 실행 : 컴파일, 테스트, 빌드를 수행하여 패키지 파일(jar나 war 같은 실행가능한 파일)을 생성한다. &ndash;&gt;
                        <goals><goal>single</goal></goals>&lt;!&ndash; single jar 파일로 생성하기 위한 옵션이다. &ndash;&gt;
                        <configuration>
                            <archiveBaseDirectory>${project.basedir}</archiveBaseDirectory>
                            <archive>
                                <manifest><mainClass>app.messages.Application</mainClass></manifest>&lt;!&ndash; 메인 클래스 위치 &ndash;&gt;
                            </archive>
                            <descriptorRefs>
                                <descriptorRef>jar-with-dependencies</descriptorRef>&lt;!&ndash; 뒤에 붙는 이름 jar-with-dependencies &ndash;&gt;
                            </descriptorRefs>
                        </configuration>
                    </execution>

                </executions>
            </plugin>

        </plugins>
-->
    </build>

</project>